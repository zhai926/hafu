<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hafu.repository.mybatis.HfExaminationCheckdataMybatisDao" >
  <resultMap id="BaseResultMap" type="com.hafu.entity.HfExaminationCheckdata" >
    <id column="id" property="id" jdbcType="DECIMAL" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="TIMESTAMP" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="data_from" property="dataFrom" jdbcType="VARCHAR" />
    <result column="examination_id" property="examinationId" jdbcType="DECIMAL" />
    <result column="data_id" property="dataId" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="LONGVARBINARY" typeHandler="org.hafu.modules.utils.ConvertBlobTypeHandler"/>
    <result column="access_status" property="accessStatus" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, card_no, name, upload_time, record_time, data_from, examination_id, data_id,data,access_status
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from hf_examination_checkdata
    <where>
	    <if test="cardNo != null and cardNo !=''" >
	       and card_no = #{cardNo}
	    </if>
	    <if test="accessStatus != null" >
	       and access_status = #{accessStatus}
	    </if>
    </where>
    <if test="orderByClause != null and orderByClause !=''" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from hf_examination_checkdata 
    <where>
	    <if test="cardNo != null and cardNo !=''" >
	       and card_no = #{cardNo}
	    </if>
	    <if test="accessStatus != null" >
	       and access_status = #{accessStatus}
	    </if>
    </where>
  </select>
  
  <select id="getByDataId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from hf_examination_checkdata where data_id=#{dataId} LIMIT 1;
  </select>
  <insert id="insert" parameterType="com.hafu.entity.HfExaminationCheckdata" >
    insert into hf_examination_checkdata ( card_no, name, 
      upload_time, record_time, data_from, 
      examination_id, data_id, data,access_status
      )
    values ( #{cardNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{uploadTime,jdbcType=TIMESTAMP}, #{recordTime,jdbcType=TIMESTAMP}, #{dataFrom,jdbcType=VARCHAR}, 
      #{examinationId,jdbcType=DECIMAL}, #{dataId,jdbcType=VARCHAR}, #{data,jdbcType=LONGVARBINARY},#{accessStatus,jdbcType=INTEGER}
      )
      <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
          select LAST_INSERT_ID()
     </selectKey>
  </insert>
  <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">  
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">  
        SELECT  
        LAST_INSERT_ID()  
    </selectKey>  
    insert into hf_examination_checkdata ( card_no, name, 
      upload_time, record_time, data_from, 
      examination_id, data_id, data,access_status
      )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
        ( #{item.cardNo}, #{item.name}, 
      #{item.uploadTime}, #{item.recordTime}, #{item.dataFrom}, 
      #{item.examinationId}, #{item.dataId}, #{item.data,jdbcType=LONGVARBINARY},#{item.accessStatus})  
    </foreach>  
</insert>  
  <update id="updateByPrimaryKey" parameterType="com.hafu.entity.HfExaminationCheckdata" >
    update hf_examination_checkdata
    <set >
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataFrom != null" >
        data_from = #{dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="examinationId != null" >
        examination_id = #{examinationId,jdbcType=DECIMAL},
      </if>
      <if test="dataId != null" >
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
      <if test="accessStatus != null" >
	    access_status = #{accessStatus,jdbcType=INTEGER}
	  </if>
    </set>
    where id = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateBatch"  parameterType="java.util.List">
         <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update hf_examination_checkdata
		    <set >
		      <if test="item.cardNo != null" >
		        card_no = #{item.cardNo,jdbcType=VARCHAR},
		      </if>
		      <if test="item.name != null" >
		        name = #{item.name,jdbcType=VARCHAR},
		      </if>
		      <if test="item.uploadTime != null" >
		        upload_time = #{item.uploadTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.recordTime != null" >
		        record_time = #{item.recordTime,jdbcType=TIMESTAMP},
		      </if>
		      <if test="item.dataFrom != null" >
		        data_from = #{item.dataFrom,jdbcType=VARCHAR},
		      </if>
		      <if test="item.examinationId != null" >
		        examination_id = #{item.examinationId,jdbcType=DECIMAL},
		      </if>
		      <if test="item.dataId != null" >
		        data_id = #{item.dataId,jdbcType=VARCHAR},
		      </if>
		      <if test="item.data != null" >
		        data = #{item.data,jdbcType=LONGVARBINARY},
		      </if>
		      <if test="item.accessStatus != null" >
			    access_status = #{item.accessStatus,jdbcType=INTEGER}
			  </if>
		    </set>
		    where id = #{item.id,jdbcType=DECIMAL}
        </foreach>
   </update>
   <delete id="deleteByExaminationId"  parameterType="java.lang.Long">
   		delete from hf_examination_checkdata where examination_id=#{id}
   </delete>
</mapper>